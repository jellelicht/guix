From 3292aa06b7a7d3c5c2acf65ac589b3c5728e34ab Mon Sep 17 00:00:00 2001
From: Jelle Licht <jlicht@fsfe.org>
Date: Sat, 20 Aug 2016 19:24:23 +0200
Subject: [PATCH] [BACKPORT] Support for @-prefixed splats.
To: guix-devel@gnu.org

---
 src/nodes.coffee | 19 ++++++++++---------
 1 file changed, 10 insertions(+), 9 deletions(-)

diff --git a/src/nodes.coffee b/src/nodes.coffee
index 6755a91..cecb574 100644
--- a/src/nodes.coffee
+++ b/src/nodes.coffee
@@ -876,22 +876,22 @@ exports.CodeNode = class CodeNode extends BaseNode
     for param, i in @params
       if splat?
         if param.attach
-          param.assign = new AssignNode new ValueNode literal('this'), [new AccessorNode param.name]
+          param.assign = new AssignNode new ValueNode literal('this'), [new AccessorNode param.value]
           @body.expressions.splice splat.index + 1, 0, param.assign
         splat.trailings.push param
       else
         if param.attach
-          name  = param.name
-          param = literal o.scope.freeVariable()
-          @body.unshift new AssignNode new ValueNode(literal('this'), [new AccessorNode name]), param
+          {value} = param
+          [param, param.splat] = [literal(o.scope.freeVariable()), param.splat]
+          @body.unshift new AssignNode new ValueNode(literal('this'), [new AccessorNode value]), param
         if param.splat
-          splat           = new SplatNode param.name
+          splat           = new SplatNode param.value
           splat.index     = i
           splat.trailings = []
           splat.arglength = @params.length
           @body.unshift(splat)
         else
-          params.push(param)
+          params.push param
     params = (param.compile(o) for param in params)
     @body.makeReturn()
     (o.scope.parameter(param)) for param in params
@@ -923,14 +923,15 @@ exports.ParamNode = class ParamNode extends BaseNode
   children: ['name']
 
   constructor: (name, attach, splat) ->
-    @name = literal name
+    @name = name
+    @value = literal @name
     @attach = attach
     @splat = splat
 
-  compileNode: (o) -> @name.compile o
+  compileNode: (o) -> @value.compile o
 
   toString: (idt) ->
-    if @type is 'this' then (literal "@#name").toString idt else @name.toString idt
+    if @attach then (literal "@#@name").toString idt else @value.toString idt
 
 #### SplatNode
 
-- 
2.9.3

